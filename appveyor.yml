version: 1.0.{build}

image: 
  #- Visual studio 2013
  #- Windows server 2019
  - Visual Studio 2017
  - Ubuntu

platform:
  #- x86
  - anyCPU

environment:
  test_variable: foo
 # matrix:
  #  - echo: echo
    #- echo: echo:second
    
skip_branch_with_pr: true
build: off
install:
  - ps: |
      "cd C:/Projects"
      "$env:test = test_string"
      ls
   #   Write-Host "Uninstalling Yarn 1.2.1..."
    #  (New-Object Net.WebClient).DownloadFile('https://github.com/yarnpkg/yarn/releases/download/v1.9.4/yarn-1.9.4.msi', "$env:temp\yarn-1.2.1.msi")
     # cmd /c start /wait msiexec.exe /x $env:temp\yarn-1.2.1.msi /quiet
    #  Write-Host "Installing Yarn 0.24.6..."
     # (New-Object Net.WebClient).DownloadFile('https://github.com/yarnpkg/yarn/releases/download/v1.15.2/yarn-1.15.2.msi', "$env:temp\yarn-0.24.6.msi")
      #cmd /c start /wait msiexec.exe /i $env:temp\yarn-0.24.6.msi /quiet
      #yarn --version
  #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
  #- dir "c:/Program Files"
  #- C:\Users\appveyor\AppData\Local\"Package Cache"\{c0f1e976-f585-48f8-968d-48c870496d4e}\python-3.7.2-amd64.exe /uninstall /passive
  #- rd /s /q "C:/python37-x64"
  #- curl -fsS -o python-install.exe https://www.python.org/ftp/python/3.7.2/python-3.7.2-amd64.exe
  #- dir "C:/"
  #- python-install /passive /quiet targetdir="C:/python37-x64" InstallAllUsers=1 PrependPath=1
  #- dir "C:/"
  #- dir "c:/Program Files"
  #- set "PATH=C:\Program Files\Python37;C:\Program Files\Python37\Scripts;%PATH%"
  #- python -VV
  #- ps: Import-PfxCertificate -FilePath C:\projects\my-react-app\mypfx2.pfx -CertStoreLocation Cert:\LocalMachine\My  -Password (ConvertTo-SecureString -String "testing" -AsPlainText -Force)
  #- systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
  #- ps: ./deploy.ps1
  #- appveyor-retry powershell Start-FileDownload https://github.com/OwenMcDonnell/my-react-app/archive/testing.tar.gz -FileName testing-char.zip
  #- dir
  - echo %platform%
  - echo %processor_architecture%
  - cmd: if %processor_architecture% == AMD64 (wmic OS get OSArchitecture)
  #- echo %APPVEYOR_BUILD_NUMBER% > archive/test-file.txt
      
  #- appveyor PushArtifact appveyor.yml README.md -DeploymentName myArtifact
  #- appveyor PushArtifact README.md -DeploymentName myArtifact
build_script:
  - mkdir archive
after_build:
  - 7z a archive.zip appveyor.yml package.json deploy.ps1
#for:
 # -
  #  branches:
   #   only: 
    #    - master
    #only_commits:
     # message: /build/         
artifacts:
  - path: ./archive.zip
    name: archive
#build_script:
 # - appveyor PushArtifact appveyor.yml -DeploymentName myArtifact
  
deploy:
  release: testing2
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: YYaba3dPUneRem8KQzFCQCq7EmhJr9P8egf6Bp6OChFwdCkyQXDsL/ImEPe4rKHN
  #artifact: myArtifact
  #force_update: true
  on:
    APPVEYOR_REPO_TAG: true
#deploy:
 # provider: Environment
  #name: ProjectA
  #auth_token:
   # secure: YYaba3dPUneRem8KQzFCQCq7EmhJr9P8egf6Bp6OChFwdCkyQXDsL/ImEPe4rKHN
  #artifact: myArtifact
  #force_update: true
  #on:
   # APPVEYOR_REPO_TAG: true
